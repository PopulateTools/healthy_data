#!/usr/bin/env ruby

require 'commander'
require 'bundler'
require "rails"
require "healthy_data"
require_relative "../app/models/healthy_data/application_record"
require_relative "../app/models/healthy_data/item_check"
require 'pry'

class HealthyDataCLI
  include Commander::Methods

  def run
    program :name, 'HealthyData'
    program :version, HealthyData::VERSION
    program :description, 'Stupid command that prints foo or bar.'

    command :item do |c|
      c.syntax = 'healthy-data item rules_path db_path model_name,...'
      c.description = 'Run checkers for an item'
      c.action do |args, _options|
        rules_path, db_path, model_names = args
        raise ArgumentError.new("You need to provide a rules yml path") if rules_path.blank?
        raise ArgumentError.new("You need to provide a database config yml path") if db_path.blank?
        raise ArgumentError.new("You need to provide a comman separated list of model names") if model_names.blank?

        HealthyData.setup do |config|
          config.item_rules_file_location = rules_path
          config.db_config_file_location = db_path
        end

        model_names.split(',').each do |model_name|
          log("Start item checks for #{model_name}")
          HealthyData.run(model_name)
          log("Finished item checks for #{model_name}")
        end
      end
    end

    run!
  end

  private

  def log text
    puts "[healthy-data] [#{DateTime.now.to_s}] #{text}"
  end

end

HealthyDataCLI.new.run if $0 == __FILE__
